name: Documentation

on:
  push:
  pull_request:
  
jobs:
  doc-generated-check:
    name: Check documentation has been generated
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-${{ env.pythonLocation }}-pip-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/dev_requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade --upgrade-strategy eager -r requirements.txt
          pip install --upgrade --upgrade-strategy eager -r dev_requirements.txt
          pip install .[tests]
      
      - name: Check if documentation has been generated
        run: |
          make create-api-docs
          if [ $(git status -s | wc -l) -gt 0 ]; then echo "Need to run `make create-api-docs` to generate the new API documentation and commit the documentation to the repository."; exit 1; fi

  doc-build-check:
    name: Check documentation can build
    runs-on: ubuntu-latest
    needs: doc-generated-check
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Node JS
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: ./docs/node_modules
          key: ${{ runner.os }}-${{ hashFiles('./docs/yarn.lock') }}
          restore-keys: ${{ runner.os }}-
      - name: Test Build
        run: |
          cd ./docs
          yarn install
          yarn build
  
  gh-release:
    needs: doc-build-check
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Node JS
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: ./docs/node_modules
          key: ${{ runner.os }}-${{ hashFiles('./docs/yarn.lock') }}
          restore-keys: ${{ runner.os }}-
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_config_global: true
      - name: Release to GitHub Pages
        env:
          USE_SSH: false
          GIT_USER: apmoore1
          DEPLOYMENT_BRANCH: gh-pages
          CURRENT_BRANCH: main
          GIT_PASS: ${{ secrets.PAT }}
        run: |
          git config --global user.email "andrew.p.moore94@gmail.com"
          git config --global user.name "Andrew Moore"
          cd ./docs
          yarn install
          yarn deploy