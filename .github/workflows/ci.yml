name: CI

on:
  push:
  pull_request:
  
jobs:
  checks:
    name: checks
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setting Python and OS environment variables
        run: |
          echo "PYTHON=${{ matrix.python-version }}" >> $GITHUB_ENV
          echo "OS=${{ runner.os }}" >> $GITHUB_ENV
      
      - name: Python location
        run: echo "Python location ${{ env.pythonLocation }}"

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-${{ env.pythonLocation }}-pip-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/dev_requirements.txt') }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade --upgrade-strategy eager -r requirements.txt
          pip install --upgrade --upgrade-strategy eager -r dev_requirements.txt

      - name: isort
        run: isort --check-only pymusas tests scripts
      
      - name: flake8
        run: flake8

      - name: Cache mypy
        uses: actions/cache@v2
        with:
          path: ./.mypy_cache
          key: ${{ runner.os }}-${{ env.pythonLocation }}

      - name: mypy
        run: mypy

      - name: Pytest and code coverage
        run: |
          coverage run
          coverage report
          coverage json

      - name: Set pymusas cache directory for ubuntu and mac
        if: ${{ runner.os == 'macOS' || runner.os == 'Linux' }}
        run: |
          echo "PYMUSAS_CACHE_HOME=$HOME/.cache/doc_test_pymusas" >> $GITHUB_ENV
      
      - name: Set pymusas cache directory for windows
        if: ${{ runner.os == 'Windows' }}
        run: |
          echo "PYMUSAS_CACHE_HOME=$HOME\.cache\doc_test_pymusas" | Out-File -FilePath $GITHUB_ENV -Encoding utf-8 -Append

      - name: Cache Doc Test download files
        uses: actions/cache@v2
        with:
          path: ${{ env.PYMUSAS_HOME }}
          key: ${{ runner.os }}-${{ env.PYMUSAS_HOME }}

      - name: Doc Tests
        run: |
          coverage run -m pytest --doctest-modules pymusas/
          coverage report

      - name: CodeCov
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.json
          env_vars: OS,PYTHON
          fail_ci_if_error: false 
  
  update-binder-requirements:
    name: update-binder-requirements
    needs: checks
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}
          persist-credentials: true
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Update environment file
        run: |
          git checkout binder-main
          git checkout main binder/environment.yml
          git config --global user.email "andrew.p.moore94@gmail.com"
          git config --global user.name "Andrew Moore"
          if [ $(git diff-index binder-main | wc -l) -gt 0 ]; then git commit -m "update"; git push origin binder-main; fi